version: 2.1
orbs:
  aws-cli: circleci/aws-cli@volatile
  aws-eks: circleci/aws-eks@volatile
  aws-ecr: circleci/aws-ecr@volatile
  terraform: circleci/terraform@volatile

jobs:
  authenticate_to_aws:
    docker:
      - image: cimg/base:stable
    environment:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ROLE_ARN: arn:aws:iam::386710959426:role/hcl-playground-ci
    steps:
      - run:
          name: Obtain Temporary AWS creds
          command: |
            # use the OpenID Connect token to obtain AWS credentials
            read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
              $(aws sts assume-role-with-web-identity \
               --role-arn ${AWS_ROLE_ARN} \
               --role-session-name "CircleCI-${CIRCLE_WORKFLOW_ID}-${CIRCLE_JOB}" \
               --web-identity-token $CIRCLE_OIDC_TOKEN \
               --duration-seconds 3600 \
               --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
               --output text)

            # Export AWS credentials to BASH_ENV for consumption in subsequent jobs
            echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> $BASH_ENV

            # interact with AWS
            aws --no-cli-pager sts get-caller-identity

  build-and-push-image:
    executor: aws-ecr/default
    parameters:
      ecr_repo_name:
        type: string
    steps:
      - checkout
      - aws-ecr/build_and_push_image:
          auth:
            - aws-cli/setup:
                role_arn: arn:aws:iam::386710959426:role/hcl-playground-ci
          repo: <<parameters.ecr_repo_name>>
          tag: '${CIRCLE_SHA1}'
          dockerfile: Dockerfile

  deploy-to-eks:
    executor: aws-eks/python3
    parameters:
      eks_cluster_name:
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: <<parameters.eks_cluster_name>>
      - run:
          name: Replace image name in Kubernetes deployment file
          command: |
            sed -i 's|{{IMAGE_NAME}}|123456789012.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:${CIRCLE_SHA1}|' ./k8s/deployment.yaml
      - run:
          name: Deploy to EKS
          command: |
            kubectl apply -f deployment/k8s/deployment.yaml
            kubectl apply -f deployment/k8s/service.yaml

  setup-infrastructure:
    docker:
      - image: hashicorp/terraform:light
    parameters:
      project_path:
        type: string
    steps:
      - checkout
      - terraform/init:
          path: <<parameters.project_path>>/
      - terraform/plan:
          path: <<parameters.project_path>>/
          var: "TF_VAR_subdomain_from_env='${CIRCLE_SHA1}'"
      - terraform/apply:
          path: <<parameters.project_path>>/
          var: "TF_VAR_subdomain_from_env='${CIRCLE_SHA1}'"

workflows:
  build-deploy-dev:
    jobs:
      - authenticate_to_aws
      - setup-infrastructure:
          project_path: deployment/terraform/development
      - build-and-push-image:
          ecr_repo_name: hcl-playground-development
          requires:
            - setup-infrastructure
      - deploy-to-eks:
          eks_cluster_name: hcl-playground-development
          requires:
            - build-and-push-image
    filters:
      branches:
        not:
          - main